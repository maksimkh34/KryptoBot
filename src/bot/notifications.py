from telegram import Bot
from src.config import load_config
from src.data.storage import load_file, WALLETS, SETTINGS
from typing import Optional
from tronpy.keys import PrivateKey

async def send_payment_receipt(bot: Bot, payment_data: dict, txid: str, username: str, from_address: str) -> None:
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –æ –Ω–æ–≤–æ–º –ø–ª–∞—Ç–µ–∂–µ.

    Args:
        bot: –≠–∫–∑–µ–º–ø–ª—è—Ä Telegram Bot.
        payment_data: –î–∞–Ω–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∞ (currency, wallet, amount).
        txid: ID —Ç—Ä–∞–Ω–∑–∞–∫—Ü–∏–∏.
        username: –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è Telegram.
        from_address: –ê–¥—Ä–µ—Å –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è.
    """
    config = load_config()
    admin_id = config["ADMIN_ID"]
    settings = load_file(SETTINGS)
    byn_amount = round(payment_data["amount"] * settings.get("trx_rate", config["TRX_RATE"]), 2)

    message = (
        f"üÜï –ù–æ–≤—ã–π –ø–ª–∞—Ç–µ–∂ ({payment_data['currency']}):\n"
        f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: @{username}\n"
        f"üì§ –° –∫–æ—à–µ–ª—å–∫–∞: {from_address}\n"
        f"üì• –ù–∞ –∫–æ—à–µ–ª–µ–∫: {payment_data['wallet']}\n"
        f"üí∞ –°—É–º–º–∞ TRX: {payment_data['amount']}\n"
        f"üí∏ –°—É–º–º–∞ BYN: {byn_amount}\n"
        f"üîó TXID: {txid}"
    )
    await bot.send_message(chat_id=admin_id, text=message)

async def send_payment_failure(bot: Bot, payment_data: dict, error: str, username: str, from_address: Optional[str] = None) -> None:
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –æ–± –æ—à–∏–±–∫–µ –ø–ª–∞—Ç–µ–∂–∞.

    Args:
        bot: –≠–∫–∑–µ–º–ø–ª—è—Ä Telegram Bot.
        payment_data: –î–∞–Ω–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∞.
        error: –û–ø–∏—Å–∞–Ω–∏–µ –æ—à–∏–±–∫–∏.
        username: –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è Telegram.
        from_address: –ê–¥—Ä–µ—Å –æ—Ç–ø—Ä–∞–≤–∏—Ç–µ–ª—è (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ).
    """
    config = load_config()
    admin_id = config["ADMIN_ID"]
    settings = load_file(SETTINGS)
    byn_amount = round(payment_data["amount"] * settings.get("trx_rate", config["TRX_RATE"]), 2)

    message = (
        f"‚ùå –û—à–∏–±–∫–∞ –ø–ª–∞—Ç–µ–∂–∞!\n"
        f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: @{username}\n"
        f"üì§ –° –∫–æ—à–µ–ª—å–∫–∞: {from_address or '–Ω–µ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω'}\n"
        f"üì• –ù–∞ –∫–æ—à–µ–ª–µ–∫: {payment_data['wallet']}\n"
        f"üí∞ –°—É–º–º–∞ TRX: {payment_data['amount']}\n"
        f"üí∏ –°—É–º–º–∞ BYN: {byn_amount}\n"
        f"üö´ –û—à–∏–±–∫–∞: {error}"
    )
    await bot.send_message(chat_id=admin_id, text=message)

async def send_insufficient_funds(bot: Bot, payment_data: dict, username: str) -> None:
    """
    –û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–¥–º–∏–Ω–∏—Å—Ç—Ä–∞—Ç–æ—Ä—É –æ –Ω–µ–¥–æ—Å—Ç–∞—Ç–∫–µ —Å—Ä–µ–¥—Å—Ç–≤.

    Args:
        bot: –≠–∫–∑–µ–º–ø–ª—è—Ä Telegram Bot.
        payment_data: –î–∞–Ω–Ω—ã–µ –ø–ª–∞—Ç–µ–∂–∞.
        username: –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è Telegram.
    """
    from src.crypto.wallet import TronWallet

    config = load_config()
    admin_id = config["ADMIN_ID"]
    settings = load_file(SETTINGS)
    byn_amount = round(payment_data["amount"] * settings.get("trx_rate", config["TRX_RATE"]), 2)

    tron = TronWallet()
    wallets = load_file(WALLETS).get("active", [])
    wallets_info = []
    for wallet in wallets:
        try:
            priv_key = wallet["private_key"]
            address = PrivateKey(bytes.fromhex(priv_key)).public_key.to_base58check_address()
            balance = tron.get_balance(address)
            bandwidth = tron.estimate_bandwidth_usage(address)
            wallets_info.append(f"‚ñ™ {address}: {balance:.2f} TRX | BW: {bandwidth}")
        except Exception:
            continue

    message = (
        f"‚ö†Ô∏è –ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤ –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–π –æ–ø–ª–∞—Ç—ã!\n"
        f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: @{username}\n"
        f"üì• –ù–∞ –∫–æ—à–µ–ª–µ–∫: {payment_data['wallet']}\n"
        f"üí∞ –¢—Ä–µ–±—É–µ–º–∞—è —Å—É–º–º–∞ TRX: {payment_data['amount']}\n"
        f"üí∏ –°—É–º–º–∞ BYN: {byn_amount}\n"
        "–ë–∞–ª–∞–Ω—Å—ã –∫–æ—à–µ–ª—å–∫–æ–≤:\n" + "\n".join(wallets_info)
    )
    await bot.send_message(chat_id=admin_id, text=message)
